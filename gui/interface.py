# author: Michael HÃ¼ppe
# date: 28.10.2024
# project: /interface.py
# built-in
from typing import Callable

from PySide2 import QtCore

# local 
from .src.interface import Ui_Form

# external
from PySide2.QtWidgets import QWidget
from resources.model_types import ModelTypes

class Interface(QWidget, Ui_Form):
    """
    Implementation of a simple GUI interface to input text and receive some kind of output.
    """
    output_send = QtCore.Signal(str)

    def __init__(self, cb_inputEnter: Callable[[str, ModelTypes], None] = lambda userInput: None):
        super().__init__()
        self._cb_inputEnter: Callable[[str, ModelTypes], None] = cb_inputEnter
        self.setupUi(self)
        self.setup_connections()

    def setupUi(self, Form) -> None:
        """
        Setup the UI form containing all the UI elements
        :param Form: UI window
        :return:
        """
        # Initialize the form with the interface layout
        super().setupUi(Form)
        self.comboBox_modelType.addItems(ModelTypes._member_names_)

    def setup_connections(self) -> None:
        """
        Setup the connections between the gui elements and the associated logic
        :return:
        """
        self.pushButton_enter.clicked.connect(
            self._pushButton_enter_clicked
        )

        self.output_send.connect(
            self._output_send_handle
        )

    def _pushButton_enter_clicked(self) -> None:
        """
        Send the current input to the input handler
        :return:
        """
        modelType = ModelTypes[self.comboBox_modelType.currentText()]
        self._cb_inputEnter(self.textEdit_abstract.toPlainText(), modelType)

    def handleOutput(self, modelOutput: str) -> None:
        """
        Handle the output
        :param modelOutput: output of the model
        :return:
        """
        self.output_send.emit(modelOutput)

    def _output_send_handle(self, modelOutput: str) -> None:
        """
        Set the text of the text Browser to the one generated by the model/input Handler
        :param modelOutput: Generated output
        :return:
        """
        self.label_title.setText(modelOutput)
